name: tests

on:
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]

permissions:
  contents: read

jobs:
    sqlite:
        strategy:
          matrix:
            go: ['1.24']
            platform: [ubuntu-latest]
            driver: [SQLite]
        runs-on: ${{ matrix.platform }}

        steps:
        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: ${{ matrix.go }}
          
        - name: Check out code into the Go module directory
          uses: actions/checkout@v4

        - name: go mod package cache
          uses: actions/cache@v4
          with:
            path: ~/go/pkg/mod
            key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('tests/go.mod') }}

        - name: Go get
          run: go get -u -t
          working-directory: tests

        - name: Test
          run: GOE_DRIVER=${{ matrix.driver }} go test . -v -race -count=1
          working-directory: tests
          
    postgres:
      strategy:
        matrix:
          dbversion: ['postgres:16.3-alpine']
          go: ['1.24']
          platform: [ubuntu-latest]
          driver: [PostgreSQL]
      runs-on: ${{ matrix.platform }}

      services:
        postgres:
          image: ${{ matrix.dbversion }}
          env:
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_DB: postgres
            POSTGRES_PORT: 5432
          ports:
            - 5432:5432
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
      steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
        
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: go mod package cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('tests/go.mod') }}

      - name: Go get
        run: go get -u -t
        working-directory: tests

      - name: Test
        run: GOE_DRIVER=${{ matrix.driver }} go test . -v -race -count=1
        working-directory: tests